import { SlashCommandBuilder } from 'discord.js';
import type { DiscordBot } from '../../index';

export default {
  data: new SlashCommandBuilder()
    .setName('help')
    .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥'),
  
  async execute(interaction: any, bot: DiscordBot) {
    try {
      const commands = Array.from(bot.commands.values());
      const categories = [...new Set(commands.map(cmd => cmd.category || '–û–±—â–∏–µ'))];
      
      const embed = {
        color: 0x0099FF,
        title: 'üìö –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥',
        description: '–í–æ—Ç –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:',
        fields: [] as any[],
        footer: {
          text: '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ / –¥–ª—è –≤—ã–∑–æ–≤–∞ –∫–æ–º–∞–Ω–¥',
        },
        timestamp: new Date().toISOString(),
      };
      
      for (const category of categories) {
        const categoryCommands = commands.filter(cmd => (cmd.category || '–û–±—â–∏–µ') === category);
        const commandList = categoryCommands.map(cmd => 
          `\`/${cmd.data.name}\` - ${cmd.data.description}`
        ).join('\n');
        
        if (commandList) {
          embed.fields.push({
            name: `üìÇ ${category}`,
            value: commandList,
            inline: false,
          });
        }
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–µ–±-–ø–∞–Ω–µ–ª–∏
      embed.fields.push({
        name: 'üåê –í–µ–±-–ø–∞–Ω–µ–ª—å',
        value: '–î–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ—Å–µ—Ç–∏—Ç–µ: http://localhost:3000',
        inline: false,
      });
      
      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('Error in help command:', error);
      await interaction.reply({
        content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.',
        ephemeral: true,
      });
    }
  },
}; 