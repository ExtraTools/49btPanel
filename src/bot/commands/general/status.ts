import { SlashCommandBuilder } from 'discord.js';
import type { DiscordBot } from '../../index';

export default {
  data: new SlashCommandBuilder()
    .setName('status')
    .setDescription('–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞'),
  
  async execute(interaction: any, bot: DiscordBot) {
    try {
      const stats = bot.getStats();
      const uptime = process.uptime();
      const uptimeFormatted = `${Math.floor(uptime / 3600)}—á ${Math.floor((uptime % 3600) / 60)}–º ${Math.floor(uptime % 60)}—Å`;
      
      const embed = {
        color: 0x00FF00,
        title: 'üü¢ –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞',
        fields: [
          {
            name: '‚è±Ô∏è –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã',
            value: uptimeFormatted,
            inline: true,
          },
          {
            name: 'üìä –°–µ—Ä–≤–µ—Ä—ã',
            value: stats.guilds.toString(),
            inline: true,
          },
          {
            name: 'üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
            value: stats.users.toString(),
            inline: true,
          },
          {
            name: 'üíæ –ü–∞–º—è—Ç—å',
            value: `${Math.round(stats.memory.heapUsed / 1024 / 1024)} MB`,
            inline: true,
          },
          {
            name: 'üåê –í–µ–±-–ø–∞–Ω–µ–ª—å',
            value: '[–û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å](http://localhost:3000)',
            inline: true,
          },
          {
            name: 'üîÑ –í–µ—Ä—Å–∏—è',
            value: 'v1.0.0',
            inline: true,
          },
        ],
        timestamp: new Date().toISOString(),
      };
      
      await interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('Error in status command:', error);
      await interaction.reply({
        content: '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞.',
        ephemeral: true,
      });
    }
  },
}; 