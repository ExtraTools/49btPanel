import { Events } from 'discord.js';
import { logger } from '../utils/logger';
import type { DiscordBot } from '../index';

export default {
  name: Events.ClientReady,
  once: true,
  async execute(client: any, bot: DiscordBot) {
    try {
      logger.info(`üü¢ Discord Bot –≥–æ—Ç–æ–≤! –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫ ${client.user.tag}`);
      logger.info(`üìä –ê–∫—Ç–∏–≤–µ–Ω –Ω–∞ ${client.guilds.cache.size} —Å–µ—Ä–≤–µ—Ä–∞—Ö`);
      logger.info(`üë• –û–±—Å–ª—É–∂–∏–≤–∞–µ—Ç ${client.users.cache.size} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
      
      // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
      client.user.setActivity('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–º', { type: 3 }); // Watching
      
      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      await bot.logAction({
        type: 'system',
        message: 'Bot started successfully',
        guildId: process.env.DISCORD_GUILD_ID || 'unknown',
        userId: client.user.id,
        data: {
          guilds: client.guilds.cache.size,
          users: client.users.cache.size,
        },
      });
    } catch (error) {
      logger.error('Error in ready event:', error);
    }
  },
}; 